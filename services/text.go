package services

import (
	"fmt"
	tg_bot "github.com/go-telegram/bot"
	"strings"
)

type ITextService interface {
	UserRegisterMessage(firstName, lastName string) string
	UserMenuMessage(firstName, lastName string) string
	DefaultMessage() string
	ErrorMessage() string
	UnapprovedUserExistsMessage() string
	ApprovedUserExistsMessage() string
	UserRegisterSuccessMessage() string
	RequestTimeoutMessage() string
	PressStartMessage() string
	AdminStartMessage() string
	AdminProgramMenuMessage() string
	AdminOnlyMessage() string

	EnterProgramNameMessage() string
	ProgramNameAlreadyExistsMessage(programName string) string
	ProgramSuccessfullyAddedMessage(programName string) string
	ProgramSuccessfullyRenamedMessage(oldProgramName, programName string) string
	SelectProgramMessage() string
	SelectProgramOptionMessage() string

	NoProgramsMessage() string

	ProgramSuccessfullyDeletedMessage(programName string) string
}

type textService struct{}

func NewTextService() *textService {
	return &textService{}
}

func (s *textService) UserRegisterMessage(firstName, lastName string) string {
	var sb strings.Builder

	sb.WriteString("–ü—Ä–∏–≤—ñ—Ç, *")
	sb.WriteString(tg_bot.EscapeMarkdown(fmt.Sprintf("%s %s", firstName, lastName)))
	sb.WriteString("*")
	sb.WriteString("\\!\n")
	sb.WriteString("–¢–µ–±–µ –Ω–µ –º–∞—î –≤ –±–∞–∑—ñ –∫–ª—ñ—î–Ω—Ç—ñ–≤\\. \n")
	sb.WriteString("–ù–∞—Ç–∏—Å–Ω–∏ \"üì≤ –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è\", —â–æ–± –∑–∞—Ä–µ—î—Å—Ç—Ä—É–≤–∞—Ç–∏—Å—è\\.\n")
	sb.WriteString("–ù–µ–æ–±—Ö—ñ–¥–Ω–æ –±—É–¥–µ –∑–∞—á–µ–∫–∞—Ç–∏ –Ω–∞ –º–æ—î –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è\\.\n")
	sb.WriteString("–ü—ñ—Å–ª—è —Ü—å–æ–≥–æ —Ç–∏ –∑–º–æ–∂–µ—à –∫–æ—Ä–∏—Å—Ç—É–≤–∞—Ç–∏—Å—è —Ü–∏–º –±–æ—Ç–æ–º\\.\n")

	return sb.String()
}

func (s *textService) UserMenuMessage(firstName, lastName string) string {
	var sb strings.Builder

	sb.WriteString("–ü—Ä–∏–≤—ñ—Ç, *")
	sb.WriteString(tg_bot.EscapeMarkdown(fmt.Sprintf("%s %s", firstName, lastName)))
	sb.WriteString("*")
	sb.WriteString("\\!\n")
	sb.WriteString("–ù–∞—Ç–∏—Å–Ω–∏ \"üöÄ –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏\", —â–æ–± –ø–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ —Å–≤–æ—ó —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏\\.\n")
	sb.WriteString("–ù–∞—Ç–∏—Å–Ω–∏ \"‚úçÔ∏è –í–Ω–µ—Å—Ç–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏\", —â–æ–± –≤–Ω–µ—Å—Ç–∏ —Å–≤–æ—ó —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏\\.\n")

	return sb.String()
}

func (s *textService) PressStartMessage() string {
	return "–í–≤–µ–¥–∏ –Ω–∞ /start, —â–æ–± –ø–æ—á–∞—Ç–∏ —Ä–æ–±–æ—Ç—É\\."
}

func (s *textService) DefaultMessage() string {
	return "–Ø –Ω–µ —Ä–æ–∑—É–º—ñ—é —Ç–µ–±–µ\\.\n –í–≤–µ–¥–∏ –Ω–∞ /start, —â–æ–± –ø–æ—á–∞—Ç–∏ —Ä–æ–±–æ—Ç—É\\. "
}

func (s *textService) ErrorMessage() string {
	return "–í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞\\. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ —â–µ —Ä–∞–∑\\."
}

func (s *textService) UnapprovedUserExistsMessage() string {
	return "–¢–∏ –≤–∂–µ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–∏–π –≤ –±–∞–∑—ñ –∫–ª—ñ—î–Ω—Ç—ñ–≤\\. –ê–ª–µ –†–æ–º–∞–Ω —â–µ –Ω–µ –ø—ñ–¥–∫–ª—é—á–∏–≤ —Ç–µ–±–µ –¥–æ –±–æ—Ç–∞\\. –ß–µ–∫–∞–π –Ω–∞ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è\\."
}

func (s *textService) ApprovedUserExistsMessage() string {
	return "–¢–∏ –≤–∂–µ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–∏–π –≤ –±–∞–∑—ñ –∫–ª—ñ—î–Ω—Ç—ñ–≤\\. –í–≤–µ–¥–∏ –Ω–∞ /start, —â–æ–± –ø–æ—á–∞—Ç–∏ —Ä–æ–±–æ—Ç—É\\."
}

func (s *textService) UserRegisterSuccessMessage() string {
	return "–¢–∏ —É—Å–ø—ñ—à–Ω–æ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–∏–π –≤ –±–∞–∑—ñ –∫–ª—ñ—î–Ω—Ç—ñ–≤\\. –ß–µ–∫–∞–π –Ω–∞ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –≤—ñ–¥ –†–æ–º–∞–Ω–∞\\."
}

func (s *textService) RequestTimeoutMessage() string {
	return "–ß–∞—Å –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –Ω–∞ –∑–∞–ø–∏—Ç –≤–∏—á–µ—Ä–ø–∞–Ω–æ. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑."
}

func (s *textService) AdminStartMessage() string {
	var sb strings.Builder

	sb.WriteString("–ü—Ä–∏–≤—ñ—Ç, *–†–æ–º–∞–Ω*\\!\n")
	sb.WriteString("–í–∏–±–µ—Ä–∏ –æ–¥–Ω—É –∑ –Ω–∞—Å—Ç—É–ø–Ω–∏—Ö –¥—ñ–π\\:\n")

	return sb.String()
}

func (s *textService) AdminProgramMenuMessage() string {
	return "–í–∏–±–µ—Ä–∏ –æ–¥–Ω—É –∑ –Ω–∞—Å—Ç—É–ø–Ω–∏—Ö –¥—ñ–π –¥–ª—è –ø—Ä–æ–≥—Ä–∞–º\\:\n"
}

func (s *textService) AdminOnlyMessage() string {
	return "–¶—è –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç—ñ–ª—å–∫–∏ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º\\."
}

func (s *textService) EnterProgramNameMessage() string {
	return "–í–≤–µ–¥–∏ –Ω–∞–∑–≤—É –ø—Ä–æ–≥—Ä–∞–º–∏\\."
}

func (s *textService) ProgramNameAlreadyExistsMessage(programName string) string {
	return fmt.Sprintf("–ü—Ä–æ–≥—Ä–∞–º–∞ –∑ –Ω–∞–∑–≤–æ—é \"*%s*\" –≤–∂–µ —ñ—Å–Ω—É—î\\. C–ø—Ä–æ–±—É–π –∑–∞–Ω–æ–≤–æ", programName)
}

func (s *textService) ProgramSuccessfullyAddedMessage(programName string) string {
	return fmt.Sprintf("–ü—Ä–æ–≥—Ä–∞–º–∞ \"*%s*\" —É—Å–ø—ñ—à–Ω–æ –¥–æ–¥–∞–Ω–∞\\.", programName)
}

func (s *textService) NoProgramsMessage() string {
	return "–ü—Ä–æ–≥—Ä–∞–º –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ\\. –°—Ç–≤–æ—Ä–∏ –Ω–æ–≤—É –ø—Ä–æ–≥—Ä–∞–º—É —ñ –ø–æ–≤—Ç–æ—Ä–∏ —Å–ø—Ä–æ–±—É\\."
}

func (s *textService) SelectProgramMessage() string {
	return "–í–∏–±–µ—Ä–∏ –ø—Ä–æ–≥—Ä–∞–º—É\\."
}

func (s *textService) SelectProgramOptionMessage() string {
	return "–í–∏–±–µ—Ä–∏ –æ–¥–Ω—É –∑ –Ω–∞—Å—Ç—É–ø–Ω–∏—Ö –¥—ñ–π –¥–ª—è –ø—Ä–æ–≥—Ä–∞–º\\:"
}

func (s *textService) ProgramSuccessfullyRenamedMessage(oldProgramName, programName string) string {
	return fmt.Sprintf("–ü—Ä–æ–≥—Ä–∞–º–∞ \"*%s*\" —É—Å–ø—ñ—à–Ω–æ –ø–µ—Ä–µ–π–º–µ–Ω–æ–≤–∞–Ω–∞ –Ω–∞ \"*%s*\" \\.", oldProgramName, programName)
}

func (s *textService) ProgramSuccessfullyDeletedMessage(programName string) string {
	return fmt.Sprintf("–ü—Ä–æ–≥—Ä–∞–º–∞ \"*%s*\" —É—Å–ø—ñ—à–Ω–æ –≤–∏–¥–∞–ª–µ–Ω–∞\\.", programName)
}
